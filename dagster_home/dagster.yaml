# Dagster instance configuration for Parliament Explorer
#
# This file configures the Dagster instance settings:
# - Storage backend (SQLite for local, PostgreSQL for production)
# - Run coordinator
# - Compute logs
# - Event log storage

# Run storage (where run metadata is stored)
run_storage:
  module: dagster.core.storage.runs
  class: SqliteRunStorage
  config:
    base_dir: dagster_home/storage

# Event log storage (where event logs are stored)
event_log_storage:
  module: dagster.core.storage.event_log
  class: SqliteEventLogStorage
  config:
    base_dir: dagster_home/storage

# Schedule storage (where schedule state is stored)
schedule_storage:
  module: dagster.core.storage.schedules
  class: SqliteScheduleStorage
  config:
    base_dir: dagster_home/storage

# Compute logs (where stdout/stderr from runs are stored)
compute_logs:
  module: dagster.core.storage.local_compute_log_manager
  class: LocalComputeLogManager
  config:
    base_dir: dagster_home/storage/compute_logs

# Run coordinator (how runs are coordinated)
run_coordinator:
  module: dagster.core.run_coordinator
  class: QueuedRunCoordinator
  config:
    max_concurrent_runs: 5

# Run launcher (how runs are launched)
run_launcher:
  module: dagster.core.launcher
  class: DefaultRunLauncher

# Telemetry (disable for privacy)
telemetry:
  enabled: false

# Production configuration (uncomment for Railway deployment):
# ---
# run_storage:
#   module: dagster_postgres.run_storage
#   class: PostgresRunStorage
#   config:
#     postgres_url: ${DAGSTER_POSTGRES_URL}
#
# event_log_storage:
#   module: dagster_postgres.event_log
#   class: PostgresEventLogStorage
#   config:
#     postgres_url: ${DAGSTER_POSTGRES_URL}
#
# schedule_storage:
#   module: dagster_postgres.schedule_storage
#   class: PostgresScheduleStorage
#   config:
#     postgres_url: ${DAGSTER_POSTGRES_URL}
