# Generated by GitHub Copilot GPT-5-Codex on 2025-10-26

from django.contrib.postgres.indexes import GinIndex
from django.contrib.postgres.search import SearchVectorField
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="KnowledgeChunk",
            fields=[
                ("id", models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name="ID")),
                ("source_type", models.CharField(choices=[("bill", "Bill"), ("debate", "Debate"), (
                    "committee", "Committee"), ("member", "Member")], max_length=32)),
                ("source_identifier", models.CharField(max_length=128)),
                ("jurisdiction", models.CharField(max_length=32)),
                ("language", models.CharField(default="en", max_length=8)),
                ("title", models.CharField(max_length=255)),
                ("content", models.TextField()),
                ("search_document", SearchVectorField(null=True)),
                ("embedding", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["jurisdiction", "language", "source_type"], name="rag_chunk_scope_idx"),
                    GinIndex(fields=["search_document"],
                             name="rag_chunk_search_idx"),
                ],
                "unique_together": {("source_type", "source_identifier", "language", "jurisdiction", "title")},
            },
        ),
    ]
